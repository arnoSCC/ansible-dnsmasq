# Configuration file for dnsmasq.
#
# Generated by ansible role
#
# Format is one option per line, legal options are the same
# as the long options legal on the command line. See
# "/usr/sbin/dnsmasq --help" or "man 8 dnsmasq" for details.

# Listen on this specific port instead of the standard DNS port
# (53). Setting this to zero completely disables DNS function,
# leaving only DHCP and/or TFTP.
{% if dnsmasq_port is defined %}
port={{ dnsmasq_port }}
{% else %}
#port=5353
{% endif %}

# The following two options make you a better netizen, since they
# tell dnsmasq to filter out queries which the public DNS cannot
# answer, and which load the servers (especially the root servers)
# unnecessarily. If you have a dial-on-demand link they also stop
# these requests from bringing up the link unnecessarily.

# Never forward plain names (without a dot or domain part)
{% if dnsmasq_domain_needed|default(false)|bool %}
domain-needed
{% else %}
#domain-needed
{% endif %}
# Never forward addresses in the non-routed address spaces.
{% if dnsmasq_bogus_priv|default(false)|bool %}
bogus-priv
{% else %}
#bogus-priv
{% endif %}

# Uncomment these to enable DNSSEC validation and caching:
# (Requires dnsmasq to be built with DNSSEC option.)
{% if dnsmasq_dnsseq is defined %}
conf-file={{ dnsmasq_dnsseq }}
dnssec
{% else %}
#conf-file=/usr/share/dnsmasq/trust-anchors.conf
#dnssec
{% endif %}

# Replies which are not DNSSEC signed may be legitimate, because the domain
# is unsigned, or may be forgeries. Setting this option tells dnsmasq to
# check that an unsigned reply is OK, by finding a secure proof that a DS 
# record somewhere between the root and the domain does not exist. 
# The cost of setting this is that even queries in unsigned domains will need
# one or more extra DNS queries to verify.
{% if dnsmasq_dnsseq_check_unsigned|default(false)|bool %}
dnssec-check-unsigned
{% else %}
#dnssec-check-unsigned
{% endif %}

# Uncomment this to filter useless windows-originated DNS requests
# which can trigger dial-on-demand links needlessly.
# Note that (amongst other things) this blocks all SRV requests,
# so don't use it if you use eg Kerberos, SIP, XMMP or Google-talk.
# This option only affects forwarding, SRV records originating for
# dnsmasq (via srv-host= lines) are not suppressed by it.
{% if dnsmasq_filterwin2k|default(false)|bool %}
filterwin2k
{% else %}
#filterwin2k
{% endif %}

# Change this line if you want dns to get its upstream servers from
# somewhere other that /etc/resolv.conf
{% if dnsmasq_resolv_file is defined %}
resolv-file={{ dnsmasq_resolv_file }}
{% else %}
#resolv-file=
{% endif %}

# By  default,  dnsmasq  will  send queries to any of the upstream
# servers it knows about and tries to favour servers to are  known
# to  be  up.  Uncommenting this forces dnsmasq to try each query
# with  each  server  strictly  in  the  order  they   appear   in
# /etc/resolv.conf
{% if dnsmasq_strict_order|default(false)|bool %}
strict-order
{% else %}
#strict-order
{% endif %}


# If you don't want dnsmasq to read /etc/resolv.conf or any other
# file, getting its servers from this file instead (see below), then
# uncomment this.
{% if dnsmasq_no_resolv|default(false)|bool %}
no-resolv
{% else %}
#no-resolv
{% endif %}

# If you don't want dnsmasq to poll /etc/resolv.conf or other resolv
# files for changes and re-read them then uncomment this.
{% if dnsmasq_no_poll|default(false)|bool %}
no-poll
{% else %}
#no-poll
{% endif %}

# Add other name servers here, with domain specs if they are for
# non-public domains.

# Example of routing PTR queries to nameservers: this will send all
# address->name queries for 192.168.3/24 to nameserver 10.1.2.3
#server=/3.168.192.in-addr.arpa/10.1.2.3

{% for server in dnsmasq_servers|default([]) -%}
server={{ server }}
{% endfor %}

# Add local-only domains here, queries in these domains are answered
# from /etc/hosts or DHCP only.
#local=/localnet/
{% for local in dnsmasq_locals|default([]) -%}
local={{ local }}
{% endfor %}

# Add domains which you want to force to an IP address here.
# The example below send any host in double-click.net to a local
# web-server.
#address=/double-click.net/127.0.0.1

# --address (and --server) work with IPv6 addresses too.
#address=/www.thekelleys.org.uk/fe80::20d:60ff:fe36:f83

{% for address in dnsmasq_addresses|default([]) -%}
address={{ address }}
{% endfor %}


{% for ipset in dnsmasq_ipsets|default([]) -%}
ipset={{ ipset }}
{% endfor %}

{% for alias in dnsmasq_aliases|default([]) -%}
alias={{ alias }}
{% endfor %}

{% if dnsmasq_user is defined %}
user={{ dnsmasq_user }}
{% endif %}
{% if dnsmasq_group is defined %}
group={{ dnsmasq_group }}
{% endif %}

{% if dnsmasq_interface is defined %}
interface={{ dnsmasq_interface }}
{% endif %}
{% for interface in dnsmasq_interfaces|default([]) -%}
interface={{ interface }}
{% endfor %}

{% if dnsmasq_except_interface is defined %}
except-interface={{ dnsmasq_except_interface }}
{% endif %}
{% for interface in dnsmasq_except_interfaces|default([]) -%}
except-interface={{ interface }}
{% endfor %}

{% if dnsmasq_listen_address is defined %}
listen-address={{ dnsmasq_listen_address }}
{% endif %}
{% for address in dnsmasq_listen_addresses|default([]) -%}
listen-address={{ address }}
{% endfor %}

{% if dnsmasq_no_dhcp_interface is defined %}
no-dhcp-interface={{ dnsmasq_no_dhcp_interface }}
{% endif %}
{% for interface in dnsmasq_no_dhcp_interfaces|default([]) -%}
no-dhcp-interface={{ interface }}
{% endfor %}

{% if dnsmasq_bind_interfaces|default(false)|bool %}
bind-interfaces
{% endif %}

{% if dnsmasq_no_hosts|default(false)|bool %}
no-hosts
{% endif %}

{% if dnsmasq_addn_hosts is defined %}
addn-hosts={{ dnsmasq_addn_hosts }}
{% endif %}

{% if dnsmasq_expand_hosts|default(false)|bool %}
expand-hosts
{% endif %}

{% if dnsmasq_domain is defined %}
domain={{ dnsmasq_domain }}
{% endif %}
{% for domain in dnsmasq_domains|default([]) -%}
domain={{ domain }}
{% endfor %}

{% if dnsmasq_dhcp_range is defined %}
dhcp-range={{ dnsmasq_dhcp_range }}
{% endif %}
{% for dhcp_range in dnsmasq_dhcp_ranges|default([]) -%}
dhcp-range={{ dhcp_range }}
{% endfor %}

{% if dnsmasq_enable_ra|default(false)|bool %}
enable-ra
{% endif %}

{% if dnsmasq_dhcp_host is defined %}
dhcp-host={{ dnsmasq_dhcp_host }}
{% endif %}
{% for dhcp_host in dnsmasq_dhcp_hosts|default([]) -%}
dhcp-host={{ dhcp_host }}
{% endfor %}

{% if dnsmasq_dhcp_ignore is defined %}
dhcp-ignore={{ dnsmasq_dhcp_ignore }}
{% endif %}
{% for dhcp_ignore in dnsmasq_dhcp_ignores|default([]) -%}
dhcp-ignore={{ dhcp_ignore }}
{% endfor %}

{% if dnsmasq_dhcp_vendorclass is defined %}
dhcp-vendorclass={{ dnsmasq_dhcp_vendorclass }}
{% endif %}
{% for dhcp_vendorclass in dnsmasq_dhcp_vendorclasses|default([]) -%}
dhcp-vendorclass={{ dhcp_vendorclass }}
{% endfor %}

{% if dnsmasq_dhcp_userclass is defined %}
dhcp-userclass={{ dnsmasq_dhcp_userclass }}
{% endif %}
{% for dhcp_userclass in dnsmasq_dhcp_userclasses|default([]) -%}
dhcp-userclass={{ dhcp_userclass }}
{% endfor %}

{% if dnsmasq_dhcp_mac is defined %}
dhcp-mac={{ dnsmasq_dhcp_mac }}
{% endif %}
{% for dhcp_mac in dnsmasq_dhcp_macs|default([]) -%}
dhcp-mac={{ dhcp_mac }}
{% endfor %}

{% if dnsmasq_read_ethers|default(false)|bool %}
read-ethers
{% endif %}

{% if dnsmasq_dhcp_option is defined %}
dhcp-option={{ dnsmasq_dhcp_option }}
{% endif %}
{% for dhcp_option in dnsmasq_dhcp_options|default([]) -%}
dhcp-option={{ dhcp_option }}
{% endfor %}

{% if dnsmasq_dhcp_option_force is defined %}
dhcp-option-force={{ dnsmasq_dhcp_option_force }}
{% endif %}
{% for dhcp_option_force in dnsmasq_dhcp_option_forces|default([]) -%}
dhcp-option-force={{ dhcp_option_force }}
{% endfor %}

{% if dnsmasq_dhcp_boot is defined %}
dhcp-boot={{ dnsmasq_dhcp_boot }}
{% endif %}
{% for dhcp_boot in dnsmasq_dhcp_boots|default([]) -%}
dhcp-boot={{ dhcp_boot }}
{% endfor %}

{% if dnsmasq_dhcp_match is defined %}
dhcp-match={{ dnsmasq_dhcp_match }}
{% endif %}
{% for dhcp_match in dnsmasq_dhcp_matches|default([]) -%}
dhcp-match={{ dhcp_match }}
{% endfor %}

{% if dnsmasq_dhcp_lease_max is defined %}
dhcp-lease-max={{ dnsmasq_dhcp_lease_max }}
{% endif %}

{% if dnsmasq_dhcp_leasefile is defined %}
dhcp-leasefile={{ dnsmasq_dhcp_leasefile }}
{% endif %}

{% if dnsmasq_dhcp_authoritative|default(false)|bool %}
dhcp-authoritative
{% endif %}

{% if dnsmasq_dhcp_script is defined %}
dhcp-script={{ dnsmasq_dhcp_script }}
{% endif %}

{% if dnsmasq_pxe_prompt is defined %}
pxe-prompt={{ dnsmasq_pxe_prompt }}
{% endif %}

{% if dnsmasq_pxe_service is defined %}
pxe-service={{ dnsmasq_pxe_service }}
{% endif %}
{% for pxe_service in dnsmasq_pxe_services|default([]) -%}
pxe-service={{ pxe_service }}
{% endfor %}

{% if dnsmasq_enable_tftp|default(false)|bool %}
enable-tftp
{% endif %}

{% if dnsmasq_tftp_root is defined %}
tftp-root={{ dnsmasq_tftp_root }}
{% endif %}

{% if dnsmasq_tftp_no_fail|default(false)|bool %}
tftp-no-fail
{% endif %}

{% if dnsmasq_tftp_secure|default(false)|bool %}
tftp-secure
{% endif %}

{% if dnsmasq_tftp_no_blocksize|default(false)|bool %}
tftp-no-blocksize
{% endif %}

{% if dnsmasq_cache_size is defined %}
cache-size={{ dnsmasq_cache_size }}
{% endif %}

{% if dnsmasq_no_negcache|default(false)|bool %}
no-negcache
{% endif %}

{% if dnsmasq_local_ttl is defined %}
local-ttl={{ dnsmasq_local_ttl }}
{% endif %}

{% if dnsmasq_bogus_nxdomain is defined %}
bogus-nxdomain={{ dnsmasq_bogus_nxdomain }}
{% endif %}
{% for bogus_nxdomain in dnsmasq_bogus_nxdomains|default([]) -%}
bogus-nxdomain={{ bogus_nxdomain }}
{% endfor %}

{% for mx_host in dnsmasq_mx_hosts|default([]) -%}
mx-host={{ mx_host }}
{% endfor %}

{% if dnsmasq_mx_target is defined %}
mx-target={{ dnsmasq_mx_target }}
{% endif %}

{% if dnsmasq_localmx|default(false)|bool %}
localmx
{% endif %}

{% if dnsmasq_selfmx|default(false)|bool %}
selfmx
{% endif %}

{% for srv_host in dnsmasq_srv_hosts|default([]) -%}
srv-host={{ srv_host }}
{% endfor %}

{% for ptr_record in dnsmasq_ptr_records|default([]) -%}
ptr-record={{ ptr_record }}
{% endfor %}

{% for txt_record in dnsmasq_txt_records|default([]) -%}
txt-record={{ txt_record }}
{% endfor %}

{% for cname in dnsmasq_cnames|default([]) -%}
cname={{ cname }}
{% endfor %}

{% if dnsmasq_log_queries|default(false)|bool %}
log-queries
{% endif %}

{% if dnsmasq_log_dhcp|default(false)|bool %}
log-dhcp
{% endif %}

{% if dnsmasq_conf_file is defined %}
conf-file={{ dnsmasq_conf_file }}
{% endif %}
{% for conf_file in dnsmasq_conf_files|default([]) -%}
conf-file={{ conf_file }}
{% endfor %}

{% if dnsmasq_conf_dir is defined %}
conf-dir={{ dnsmasq_conf_dir }}
{% endif %}
{% for conf_dir in dnsmasq_conf_dirs|default([]) -%}
conf-dir={{ conf_dir }}
{% endfor %}